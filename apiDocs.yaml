openapi: 3.0.0
servers: []
info:
    description: |
        This is a simple service for managing containers with product.
    version: "1.0.0"
    title: Warehouse service
    contact:
        email: yushkevichv@gmail.com
tags:
    - name: container
      description: Everything about your Containers
paths:
    /containers:
        post:
            tags:
                - container
            summary: Add a new container
            operationId: addContainer
            parameters:
                - name: name
                  in: path
                  description: Name of container
                  required: true
                  schema:
                      type: string
                - name: products
                  in: path
                  description: Products for containers
                  required: true
                  schema:
                      type: array
                      items:
                          type: integer
                          format: int64
            responses:
                '422':
                    description: validation exception
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiErrorResponse'
                '201':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiSuccessfullResponse'
            requestBody:
                $ref: '#/components/requestBodies/Container'
        get:
            parameters:
                - name: page
                  in: query
                  description: Paginator
                  schema:
                      type: integer
                      format: int32
            tags:
                - container
            summary: get all containers
            operationId: getContainers
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Container'
    /containers/get-optimal:
        get:
            tags:
                - container
            summary: Finds optimal count containers for get all-typed products
            operationId: findOptimalCountContainers
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ApiOptimalContainerResponse'

    '/containers/{id}':
        get:
            tags:
                - container
            summary: Find container by ID
            description: Returns a single container
            operationId: getContainerById
            parameters:
                - name: id
                  in: path
                  description: ID of container to return
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Container'
                '404':
                    description: Container not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiErrorResponse'

        delete:
            tags:
                - container
            summary: Deletes a container
            operationId: deleteContainer
            parameters:
                - name: id
                  in: path
                  description: Container id to delete
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiSuccessfullResponse'
                '404':
                    description: Container not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiErrorResponse'



components:
    schemas:
        Product:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                name:
                    type: string
        Container:
            type: object
            required:
                - name
                - products
            properties:
                id:
                    type: integer
                    format: int64
                name:
                    type: string
                    example: Container xxx
                products:
                    type: array
                    items:
                        $ref: '#/components/schemas/Product'
        ApiOptimalContainerResponse:
            type: object
            properties:
                data:
                    type: array
                    items:
                        type: integer
                        format: int64
                count:
                    type: integer
                    format: int64
        ApiSuccessfullResponse:
            type: object
            properties:
                data:
                    type: array
                    items:
                        type: string
        ApiErrorResponse:
            type: object
            properties:
                data:
                    type: array
                    items:
                        type: string
    requestBodies:
        Container:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Container'
            description: Container object that needs to be added
            required: true
